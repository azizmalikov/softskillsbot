import { composer, middleware } from "../../core/core.js";
import pkg from "telegraf";
const { Extra, Markup } = pkg;
// import axios from "axios";

composer.start(async (ctx) => {
  await ctx.replyWithHTML(
    `Assalom aleykum, botimizga xush kelibsiz, avval telefon raqamingizni jo'nating.
        
--------------------------
        
–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, –¥–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –Ω–∞—à –±–æ—Ç, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–Ω–∞—á–∞–ª–∞ –ø—Ä–∏—à–ª–∏—Ç–µ —Å–≤–æ–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞. 
        `,
    //   Markup.keyboard([["–†—É—Å—Å–∫–∏–π üá∑üá∫", "O`zbekcha üá∫üáø"]])
    //     .oneTime()
    //     .resize()
    //     .extra()
    // )
    // .then(() => console.log(ctx.message.text));

    Extra.markup((markup) => {
      return markup
        .resize()
        .oneTime()
        .keyboard([markup.contactRequestButton("Send contact")]);
    })
  );
});

composer.on("contact", async (ctx) => {
  await ctx.replyWithHTML(
    `Tahsil olayotgan yo\`nalishingizni tanlang\n\n` +
      `--------------------------\n\n` +
      `–í—ã–±–µ—Ä–∏—Ç–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ–±—É—á–µ–Ω–∏—è`,
    Markup.keyboard([["Fullstack", "Data Science", "Software Engineering"]])
      .oneTime()
      .resize()
      .extra()
  );
  // .then(() => console.log(ctx.message.text))
  // let chatId = -1001737340674
  // const message = ctx.message.text
  // await ctx.telegram.sendMessage(chatId, message)

  // const contact = ctx.message.contact.phone_number
  //
  // console.log(contact)
});

composer.hears("Software Engineering", async (ctx) => {
  // const course = ctx.message.text
  // console.log((course))

  await ctx.replyWithHTML(
    `Ism, familiyangizni va yoshingizni yozib yuboring\n\n` +
      `--------------------------\n\n` +
      `–ù–∞–ø–∏—à–∏—Ç–µ —Å–≤–æ–µ –∏–º—è, —Ñ–∞–º–∏–ª–∏—é –∏ –≤–æ–∑—Ä–∞—Å—Ç`
  );
  // .then(() => console.log(ctx.message))
});

composer.hears("Fullstack", async (ctx) => {
  // const course = ctx.message.text
  // console.log((course))

  await ctx.replyWithHTML(
    `Ism, familiyangizni va yoshingizni yozib yuboring\n\n` +
      `--------------------------\n\n` +
      `–ù–∞–ø–∏—à–∏—Ç–µ —Å–≤–æ–µ –∏–º—è, —Ñ–∞–º–∏–ª–∏—é –∏ –≤–æ–∑—Ä–∞—Å—Ç`
  );
  // .then(() => console.log(ctx.message))
});
composer.hears("Data Science", async (ctx) => {
  // const course = ctx.message.text
  // console.log((course))

  await ctx.replyWithHTML(
    `Ism, familiyangizni va yoshingizni yozib yuboring\n\n` +
      `--------------------------\n\n` +
      `–ù–∞–ø–∏—à–∏—Ç–µ —Å–≤–æ–µ –∏–º—è, —Ñ–∞–º–∏–ª–∏—é –∏ –≤–æ–∑—Ä–∞—Å—Ç`
  );
  // .then(() => console.log(ctx.message))
});

composer.hears("–†—É—Å—Å–∫–∏–π üá∑üá∫", async (ctx) => {
  // const sss = ctx.message.text
  //
  // var user = ctx.from.id
  // let message = ctx.message.text.toString()
  // console.log(message)

  // ctx.telegram.sendMessage(user, text).then();
  // ctx.telegram.sendContact(user, contact).then()
  // await ctx
  //   .reply(
  //     "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ —Å–≤–æ–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω –Ω–∞–∂–∏–º–∞—è –Ω–∞ –∫–Ω–æ–ø–∫—É.",
  //     Extra.markup((markup) => {
  //       return markup
  //         .resize()
  //         .oneTime()
  //         .keyboard([markup.contactRequestButton("Send contact")]);
  //     })
  //   )
  //   .then((r) => console.log(r));
  // const text = ctx.message.text;
  // console.log(text)

  //         `–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤–ª—è–π—Ç–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –≤ —Å–ª–µ–¥—É—é—â–µ–º –ø–æ—Ä—è–¥–∫–µ:
  // 1.<b>–§–ò–û</b>
  // 2.<b>–í–æ–∑—Ä–∞—Å—Ç</b>
  // 3.<b>–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞</b>
  // –∏ <b>–ó–ê–¢–ï–ú</b>, –æ—Ç–ø—Ä–∞–≤–∏–≤ –¥–∞–Ω–Ω—ãx, –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É, —á—Ç–æ–±—ã –≤—ã–±—Ä–∞—Ç—å —Å–≤–æ–π –ø–æ–ª`

  if (text === "–†—É—Å—Å–∫–∏–π üá∑üá∫") {
    await ctx.replyWithHTML(
      `–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ —Å–≤–æ–π –ø–æ–ª`,
      Markup.keyboard([["–º—É–∂—á–∏–Ω–∞", "–∂–µ–Ω—â–∏–Ω–∞"]])
        .oneTime()
        .resize()
        .extra()
    );
  }
});

composer.hears("O`zbekcha üá∫üáø", async (ctx) => {
  // let user = ctx.from.id
  // let text = ctx.message.text
  // console.log(text)

  // ctx.telegram.sendMessage(user, text).then();
  // ctx.telegram.sendContact(user, contact).then()
  const text = ctx.message.text;

  // await ctx
  //     .reply(
  //         "Iltimos, tugmani bosib o‚Äôz telefon raqamingizni jo‚Äônating.",
  //         Extra.markup((markup) => {
  //             return markup
  //                 .resize()
  //                 .oneTime()
  //                 .keyboard([markup.contactRequestButton("Send contact")]);
  //         })
  //     )
  //     .then((r) => console.log(r));

  if (text === "O`zbekcha üá∫üáø") {
    await ctx.replyWithHTML(
      `Iltimos, jinsingizni tanlang`,
      Markup.keyboard([["erkak", "ayol"]])
        .oneTime()
        .resize()
        .extra()
    );
  }
});

composer.on("text", async (ctx) => {
  await ctx.replyWithHTML(
    `Testni boshlash uchun o\`zingizga qulay tilni tanlang\n\n` +
      `--------------------------\n\n` +
      `–í—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–¥—Ö–æ–¥–∏—Ç –≤–∞–º, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å —Ç–µ—Å—Ç`,
    Markup.keyboard([["–†—É—Å—Å–∫–∏–π üá∑üá∫", "O`zbekcha üá∫üáø"]])
      .oneTime()
      .resize()
      .extra()
  );
  // .then(() => console.log(ctx.message))
});

//     let user = ctx.from.id
//     let text = ctx.message.text
//     let contact = ctx.message.contact
//     console.log(text)
//     console.log(contact)
//     let chatId = -1001737340674
//     let text = ctx.message.text
//     await ctx.telegram.sendMessage(chatId, text)
// let contact = ctx.message.contact.phone_number

middleware(composer);
